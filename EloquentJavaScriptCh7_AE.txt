function SmartPlantEater = line


function SmartPlantEater() {
  this.energy = 20;
  this.prevDirection = null;
}

SmartPlantEater.prototype.act = function(view) {
  var space = view.find(" ");
  
  if (this.energy > 60 && space){
    //console.log("reproduce");
    return {type: "reproduce", direction: space};
  }
  var plant = view.find("*");
  if (plant && (this.energy < 40 || space == null)){
    //console.log("eat");
    return {type: "eat", direction: plant};
  }
  if (space){
    if (this.energy < 20 && this.prevDirection != null){
      if (view.findAll(" ").indexOf(this.prevDirection)){
        //console.log ("move " + this.prevDirection);
  		return {type: "move", direction: this.prevDirection};
      }
    }
    this.prevDirection = space;
    //console.log (" move " + space);
    return {type: "move", direction: space};
  }
};

animateWorld(new LifelikeWorld(
  ["############################",
   "#####                 ######",
   "##   ***                **##",
   "#   *##**         **  O  *##",
   "#    ***     O    ##**    *#",
   "#       O         ##***    #",
   "#                 ##**     #",
   "#   O       #*             #",
   "#*          #**       O    #",
   "#***        ##**    O    **#",
   "##****     ###***       *###",
   "############################"],
  {"#": Wall,
   "O": SmartPlantEater,
   "*": Plant}
));


---------------------------------------------------------------

function Tiger() {
  this.energy = 60;
  this.prevDirection = null;
}

Tiger.prototype.act = function(view) {
  var space = view.find(" ");
  
  if (this.energy > 100 && space){
    //console.log("reproduce");
    return {type: "reproduce", direction: space};
  }
  var herbi = view.find("O");
  if (herbi && (this.energy < 40 || space == null)){
    //console.log("eat");
    return {type: "eat", direction: herbi};
  }
  if (space){
    if (this.energy < 30 && this.prevDirection != null){
      if (view.findAll(" ").indexOf(this.prevDirection) != -1){
        //console.log ("move " + this.prevDirection);
  		return {type: "move", direction: this.prevDirection};
      }
    }
    if (herbi)
      this.prevDirection = herbi;
    else
    	this.prevDirection = space;
    //console.log (" move " + space);
    return {type: "move", direction: space};
  }
};

animateWorld(new LifelikeWorld(
  ["####################################################",
   "#                 ####         ****              ###",
   "#   *  @  ##                 ########       OO    ##",
   "#   *    ##        O O                 ****       *#",
   "#       ##*                        ##########     *#",
   "#      ##***  *         ****                     **#",
   "#* **  #  *  ***      #########                  **#",
   "#* **  #      *               #   *              **#",
   "#     ##              #   O   #  ***          ######",
   "#*            @       #       #   *        O  #    #",
   "#*                    #  ######                 ** #",
   "###          ****          ***                  ** #",
   "#       O                        @         O       #",
   "#   *     ##  ##  ##  ##               ###      *  #",
   "#   **         #              *       #####  O     #",
   "##  **  O   O  #  #    ***  ***        ###      ** #",
   "###               #   *****                    ****#",
   "####################################################"],
  {"#": Wall,
   "@": Tiger,
   "O": SmartPlantEater, // from previous exercise
   "*": Plant}
));